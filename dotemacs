
;; disable line wrap
(setq default-truncate-lines t)

;; make side by side buffers function the same as the main window
(setq truncate-partial-width-windows nil)

;; Add F12 to toggle line wrap
(global-set-key [f12] 'toggle-truncate-lines)

(add-to-list 'load-path "~/.emacs.d")
(add-to-list 'load-path "~/.emacs.d/textmate.el")
(require 'textmate)
(textmate-mode)
;(require 'ido)
;(ido-mode t)
(require 'uniquify)
(setq uniqueify-buffer-name-style 'reverse)
(global-font-lock-mode 1)
 
(desktop-save-mode 1)
(setq history-length 250)
(add-to-list 'desktop-globals-to-save 'file-name-history)

;; JS2
(autoload 'js2-mode "js2" nil t)
(add-to-list 'auto-mode-alist '("\\.js$" . js2-mode))
(setq js2-basic-offset 2)
(setq js2-use-font-lock-faces t)


(add-to-list 'load-path "~/.emacs.d/magit")
(require 'magit)

;(require 'ruby-mode)
(add-to-list 'auto-mode-alist '("\\.rb" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rake" . ruby-mode))
(require 'haml-mode)
(add-to-list 'auto-mode-alist '("\\.haml" . haml-mode))
(add-hook 'haml-mode-hook
          '(lambda () (setq indent-tabs-mode nil)))


(setq-default mode-line-buffer-identification 
              (list 'buffer-file-name 
                    (propertized-buffer-identification "%12f") 
                    (propertized-buffer-identification "%12b") ))

(add-hook 'dired-mode-hook 
          (lambda () 
            ;; TODO: handle (DIRECTORY FILE ...) list value for dired-directory 
            (setq mode-line-buffer-identification 
                  ;; emulate "%17b" (see dired-mode): 
                  '(:eval 
                    (propertized-buffer-identification 
                     (if (< (length default-directory) 17) 
                         (concat default-directory 
                                 (make-string (- 17 (length default-directory)) 
                                              ?\s)) 
                       default-directory)))))) 

; auto-completion
(require 'auto-complete)
(ac-flyspell-workaround) 
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(require 'auto-complete-config)
(ac-config-default)




;whitespace
(setq whitespace-style (quote
  ( spaces tabs newline space-mark tab-mark newline-mark)))



;; Org-mode settings
(require 'org)
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-font-lock-mode 1)

;color theme
(require 'color-theme)
(color-theme-initialize)
(load-theme 'zenburn)
(eval-after-load "color-theme" '(color-theme-zenburn))
